{"ast":null,"code":"import SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nlet stompClient = null;\nexport function connect(onMessageReceived, onConnected) {\n  const socket = new SockJS(\"/ws\");\n  stompClient = Stomp.over(socket);\n  stompClient.connect({}, onConnected, onError);\n  function onError(error) {\n    console.log(\"WebSocket connection error: \" + error);\n  }\n}\n\n// export function sendMessage(message) {\n//   if (stompClient) {\n//     stompClient.send(\"/app/chat.sendMessage\", {}, JSON.stringify(message));\n//   }\n// }\n\n// export function addUser(username) {\n//   if (stompClient) {\n//     stompClient.send(\"/app/chat.addUser\", {}, JSON.stringify({ sender: username, type: 'JOIN' }));\n//   }\n// }\n\n// export function subscribePublic(onMessageReceived) {\n//   if (stompClient) {\n//     stompClient.subscribe(\"/topic/public\", function (message) {\n//       onMessageReceived(JSON.parse(message.body));\n//     });\n//   }\n// }","map":{"version":3,"names":["SockJS","Stomp","stompClient","connect","onMessageReceived","onConnected","socket","over","onError","error","console","log"],"sources":["D:/000Projects/JAVA/emp-train/et-web/src/services/WebSocketService.js"],"sourcesContent":["import SockJS from \"sockjs-client\";\r\nimport Stomp from \"stompjs\";\r\n\r\n\r\nlet stompClient = null;\r\n\r\nexport function connect(onMessageReceived, onConnected) {\r\n  const socket = new SockJS(\"/ws\");\r\n  stompClient = Stomp.over(socket);\r\n  stompClient.connect({}, onConnected, onError);\r\n\r\n  function onError(error) {\r\n    console.log(\"WebSocket connection error: \" + error);\r\n  }\r\n}\r\n\r\n// export function sendMessage(message) {\r\n//   if (stompClient) {\r\n//     stompClient.send(\"/app/chat.sendMessage\", {}, JSON.stringify(message));\r\n//   }\r\n// }\r\n\r\n// export function addUser(username) {\r\n//   if (stompClient) {\r\n//     stompClient.send(\"/app/chat.addUser\", {}, JSON.stringify({ sender: username, type: 'JOIN' }));\r\n//   }\r\n// }\r\n\r\n// export function subscribePublic(onMessageReceived) {\r\n//   if (stompClient) {\r\n//     stompClient.subscribe(\"/topic/public\", function (message) {\r\n//       onMessageReceived(JSON.parse(message.body));\r\n//     });\r\n//   }\r\n// }\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,eAAe;AAClC,OAAOC,KAAK,MAAM,SAAS;AAG3B,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,SAASC,OAAOA,CAACC,iBAAiB,EAAEC,WAAW,EAAE;EACtD,MAAMC,MAAM,GAAG,IAAIN,MAAM,CAAC,KAAK,CAAC;EAChCE,WAAW,GAAGD,KAAK,CAACM,IAAI,CAACD,MAAM,CAAC;EAChCJ,WAAW,CAACC,OAAO,CAAC,CAAC,CAAC,EAAEE,WAAW,EAAEG,OAAO,CAAC;EAE7C,SAASA,OAAOA,CAACC,KAAK,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,GAAGF,KAAK,CAAC;EACrD;AACF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}