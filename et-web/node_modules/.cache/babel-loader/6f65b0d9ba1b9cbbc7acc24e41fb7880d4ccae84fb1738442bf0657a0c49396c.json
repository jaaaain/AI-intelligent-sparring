{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" <label for=\\\"options\\\">请选择训练模式:</label>\\n    <select v-model=\\\"selectedOption\\\" id=\\\"options\\\">\\n      <option value=\\\"1\\\" selected=\\\"selected\\\">模式1</option>\\n      <option value=\\\"2\\\">模式2</option>\\n      <option value=\\\"3\\\">模式3</option>\\n      <option value=\\\"4\\\">模式4</option>\\n    </select>\\n    <button @click=\\\"startTrain\\\">开始训练</button> \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.messageContent = $event),\n    placeholder: \"Type a message...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.messageContent]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.sendMessage && $options.sendMessage(...args))\n  }, \"send\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.sender\n    }, [_createElementVNode(\"p\", null, [_createElementVNode(\"strong\", null, _toDisplayString(message.sender) + \":\", 1 /* TEXT */), _createTextVNode(\" \" + _toDisplayString(message.content), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_createCommentVNode","_createElementVNode","_cache","$event","$data","messageContent","placeholder","onClick","args","$options","sendMessage","_Fragment","_renderList","messages","message","key","sender","_toDisplayString","_createTextVNode","content"],"sources":["D:\\000Projects\\JAVA\\emp-train\\et-web\\src\\components\\WebSocketTest.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- <label for=\"options\">请选择训练模式:</label>\n    <select v-model=\"selectedOption\" id=\"options\">\n      <option value=\"1\" selected=\"selected\">模式1</option>\n      <option value=\"2\">模式2</option>\n      <option value=\"3\">模式3</option>\n      <option value=\"4\">模式4</option>\n    </select>\n    <button @click=\"startTrain\">开始训练</button> -->\n    \n    <input v-model=\"messageContent\" placeholder=\"Type a message...\">\n    <button @click=\"sendMessage\">send</button>\n\n    <div v-for=\"message in messages\" :key=\"message.sender\">\n      <p><strong>{{ message.sender }}:</strong> {{ message.content }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      username: '',\n      selectedOption:'',\n      messages: [],\n      messageContent: '',\n      websocket: null\n    };\n  },\n  mounted() {\n  },\n  methods: {\n    startTrain(){\n      this.connect(this.selectedOption);\n\n    },\n    connect(selectedOption) {\n      let socketUrl = \"ws://localhost:8080/api/websocket/conversation/1\"\n      this.websocket = new WebSocket(socketUrl);\n      this.websocket.onmessage = function (message) {\n        console.log(message.data);\n      }\n    },\n    onMessageReceived(message) {\n      this.messages.push(message);\n    },\n    sendMessage() {\n      if (this.messageContent.trim()) {\n        const message = {\n          sender: this.username,\n          content: this.messageContent\n        };\n        this.websocket.send(JSON.stringify(message)); // websocket 发送消息\n        this.messages.push(message); // 消息历史\n        this.messageContent = ''; // 清空输入框\n      }\n    }\n  }\n};\n</script>\n"],"mappings":";;uBACEA,mBAAA,CAgBM,cAfJC,mBAAA,2VAO6C,E,gBAE7CC,mBAAA,CAAgE;IAXpE,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAWoBC,KAAA,CAAAC,cAAc,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAA5BF,KAAA,CAAAC,cAAc,E,GAC9BJ,mBAAA,CAA0C;IAAjCM,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,MAAI,I,kBAEjCT,mBAAA,CAEMY,SAAA,QAhBVC,WAAA,CAc2BR,KAAA,CAAAS,QAAQ,EAAnBC,OAAO;yBAAnBf,mBAAA,CAEM;MAF4BgB,GAAG,EAAED,OAAO,CAACE;QAC7Cf,mBAAA,CAAmE,YAAhEA,mBAAA,CAAsC,gBAAAgB,gBAAA,CAA3BH,OAAO,CAACE,MAAM,IAAG,GAAC,iBAftCE,gBAAA,CAe+C,GAAC,GAAAD,gBAAA,CAAGH,OAAO,CAACK,OAAO,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}