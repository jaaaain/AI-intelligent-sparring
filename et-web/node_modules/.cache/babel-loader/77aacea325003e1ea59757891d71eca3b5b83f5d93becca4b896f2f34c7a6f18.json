{"ast":null,"code":"// import SockJS from \"sockjs-client\";\n// import Stomp from \"stompjs\";\n\n// let stompClient = null;\n\n// export function connect(onMessageReceived, onConnected) {\n//   const socket = new SockJS(\"/ws\");\n//   stompClient = Stomp.over(socket);\n//   stompClient.connect({}, onConnected, onError);\n\n//   function onError(error) {\n//     console.log(\"WebSocket connection error: \" + error);\n//   }\n// }\n\nvar websocket = null;\nexport function connect() {\n  let socketUrl = \"ws://localhost:8080/api/websocket/conversation/1\";\n  websocket = new WebSocket(socketUrl);\n  websocket.onmessage = function (message) {\n    console.log(message.data);\n  };\n}\nexport function sendMessage(message) {\n  websocket.send(message);\n}\n\n// export function addUser(username) {\n//   if (stompClient) {\n//     stompClient.send(\"/app/chat.addUser\", {}, JSON.stringify({ sender: username, type: 'JOIN' }));\n//   }\n// }\n\n// export function subscribePublic(onMessageReceived) {\n//   if (stompClient) {\n//     stompClient.subscribe(\"/topic/public\", function (message) {\n//       onMessageReceived(JSON.parse(message.body));\n//     });\n//   }\n// }","map":{"version":3,"names":["websocket","connect","socketUrl","WebSocket","onmessage","message","console","log","data","sendMessage","send"],"sources":["D:/000Projects/JAVA/emp-train/et-web/src/services/WebSocketService.js"],"sourcesContent":["// import SockJS from \"sockjs-client\";\r\n// import Stomp from \"stompjs\";\r\n\r\n\r\n// let stompClient = null;\r\n\r\n// export function connect(onMessageReceived, onConnected) {\r\n//   const socket = new SockJS(\"/ws\");\r\n//   stompClient = Stomp.over(socket);\r\n//   stompClient.connect({}, onConnected, onError);\r\n\r\n//   function onError(error) {\r\n//     console.log(\"WebSocket connection error: \" + error);\r\n//   }\r\n// }\r\n\r\n  var websocket = null;\r\nexport function connect(){\r\n  let socketUrl = \"ws://localhost:8080/api/websocket/conversation/1\"\r\n  websocket = new WebSocket(socketUrl);\r\n  websocket.onmessage = function(message) {\r\n    console.log(message.data);\r\n  }\r\n}\r\n\r\nexport function sendMessage(message) {\r\n  websocket.send(message);\r\n}\r\n\r\n// export function addUser(username) {\r\n//   if (stompClient) {\r\n//     stompClient.send(\"/app/chat.addUser\", {}, JSON.stringify({ sender: username, type: 'JOIN' }));\r\n//   }\r\n// }\r\n\r\n// export function subscribePublic(onMessageReceived) {\r\n//   if (stompClient) {\r\n//     stompClient.subscribe(\"/topic/public\", function (message) {\r\n//       onMessageReceived(JSON.parse(message.body));\r\n//     });\r\n//   }\r\n// }\r\n"],"mappings":"AAAA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEE,IAAIA,SAAS,GAAG,IAAI;AACtB,OAAO,SAASC,OAAOA,CAAA,EAAE;EACvB,IAAIC,SAAS,GAAG,kDAAkD;EAClEF,SAAS,GAAG,IAAIG,SAAS,CAACD,SAAS,CAAC;EACpCF,SAAS,CAACI,SAAS,GAAG,UAASC,OAAO,EAAE;IACtCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAACG,IAAI,CAAC;EAC3B,CAAC;AACH;AAEA,OAAO,SAASC,WAAWA,CAACJ,OAAO,EAAE;EACnCL,SAAS,CAACU,IAAI,CAACL,OAAO,CAAC;AACzB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}