{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { connect, sendMessage, subscribePublic } from \"@/services/WebSocketService\";\nexport default {\n  data() {\n    return {\n      username: '',\n      messages: [],\n      messageContent: '',\n      websocket: null\n    };\n  },\n  mounted() {\n    this.username = prompt('Enter your name:');\n    connect(this.onMessageReceived, this.onConnected);\n  },\n  methods: {\n    onConnected() {\n      // addUser(this.username);\n      subscribePublic(this.onMessageReceived);\n    },\n    onMessageReceived(message) {\n      this.messages.push(message);\n    },\n    sendMessage() {\n      if (this.messageContent.trim()) {\n        sendMessage({\n          sender: this.username,\n          content: this.messageContent,\n          type: 'CHAT'\n        });\n        this.messages.push(message);\n        this.messageContent = ''; // 清空输入框\n      }\n    }\n  }\n};","map":{"version":3,"names":["connect","sendMessage","subscribePublic","data","username","messages","messageContent","websocket","mounted","prompt","onMessageReceived","onConnected","methods","message","push","trim","sender","content","type"],"sources":["D:\\000Projects\\JAVA\\emp-train\\et-web\\src\\components\\WebSocketTest.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-for=\"message in messages\" :key=\"message.sender\">\n      <p><strong>{{ message.sender }}:</strong> {{ message.content }}</p>\n    </div>\n    \n    <input v-model=\"messageContent\" placeholder=\"Type a message...\">\n    <button @click=\"sendMessage\">send</button>\n  </div>\n</template>\n\n<script>\nimport { connect, sendMessage, subscribePublic } from \"@/services/WebSocketService\";\n\nexport default {\n  data() {\n    return {\n      username: '',\n      messages: [],\n      messageContent: '',\n      websocket: null\n    };\n  },\n  mounted() {\n    this.username = prompt('Enter your name:');\n    connect(this.onMessageReceived, this.onConnected);\n  },\n  methods: {\n    onConnected() {\n      // addUser(this.username);\n      subscribePublic(this.onMessageReceived);\n    },\n    onMessageReceived(message) {\n      this.messages.push(message);\n    },\n    sendMessage() {\n      if (this.messageContent.trim()) {\n        sendMessage({ sender: this.username, content: this.messageContent, type: 'CHAT' });\n        this.messages.push(message);\n        this.messageContent = ''; // 清空输入框\n      }\n    }\n  }\n};\n</script>\n"],"mappings":";AAYA,SAASA,OAAO,EAAEC,WAAW,EAAEC,eAAc,QAAS,6BAA6B;AAEnF,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,cAAc,EAAE,EAAE;MAClBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACJ,QAAO,GAAIK,MAAM,CAAC,kBAAkB,CAAC;IAC1CT,OAAO,CAAC,IAAI,CAACU,iBAAiB,EAAE,IAAI,CAACC,WAAW,CAAC;EACnD,CAAC;EACDC,OAAO,EAAE;IACPD,WAAWA,CAAA,EAAG;MACZ;MACAT,eAAe,CAAC,IAAI,CAACQ,iBAAiB,CAAC;IACzC,CAAC;IACDA,iBAAiBA,CAACG,OAAO,EAAE;MACzB,IAAI,CAACR,QAAQ,CAACS,IAAI,CAACD,OAAO,CAAC;IAC7B,CAAC;IACDZ,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACK,cAAc,CAACS,IAAI,CAAC,CAAC,EAAE;QAC9Bd,WAAW,CAAC;UAAEe,MAAM,EAAE,IAAI,CAACZ,QAAQ;UAAEa,OAAO,EAAE,IAAI,CAACX,cAAc;UAAEY,IAAI,EAAE;QAAO,CAAC,CAAC;QAClF,IAAI,CAACb,QAAQ,CAACS,IAAI,CAACD,OAAO,CAAC;QAC3B,IAAI,CAACP,cAAa,GAAI,EAAE,EAAE;MAC5B;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}