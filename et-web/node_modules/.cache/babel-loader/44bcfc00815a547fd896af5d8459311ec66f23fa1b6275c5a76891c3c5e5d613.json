{"ast":null,"code":"// import SockJS from \"sockjs-client\";\n// import Stomp from \"stompjs\";\n\n// let stompClient = null;\n\n// export function connect(onMessageReceived, onConnected) {\n//   const socket = new SockJS(\"/ws\");\n//   stompClient = Stomp.over(socket);\n//   stompClient.connect({}, onConnected, onError);\n\n// function onError(error) {\n//   console.log(\"WebSocket connection error: \" + error);\n// }\n// }\n\nexport function sendMessage(message) {\n  websocket.send(message);\n  // if (stompClient) {\n  //   stompClient.send(\"/app/chat.sendMessage\", {}, JSON.stringify(message));\n  // }\n}\n\n// export function subscribePublic(onMessageReceived) {\n//   if (stompClient) {\n//     stompClient.subscribe(\"/topic/public\", function (message) {\n//       onMessageReceived(JSON.parse(message.body));\n//     });\n//   }\n// }","map":{"version":3,"names":["sendMessage","message","websocket","send"],"sources":["D:/000Projects/JAVA/emp-train/et-web/src/services/WebSocketService.js"],"sourcesContent":["// import SockJS from \"sockjs-client\";\r\n// import Stomp from \"stompjs\";\r\n\r\n\r\n// let stompClient = null;\r\n\r\n// export function connect(onMessageReceived, onConnected) {\r\n//   const socket = new SockJS(\"/ws\");\r\n//   stompClient = Stomp.over(socket);\r\n//   stompClient.connect({}, onConnected, onError);\r\n\r\n  // function onError(error) {\r\n  //   console.log(\"WebSocket connection error: \" + error);\r\n  // }\r\n// }\r\n\r\n\r\n\r\nexport function sendMessage(message) {\r\n  websocket.send(message);\r\n  // if (stompClient) {\r\n  //   stompClient.send(\"/app/chat.sendMessage\", {}, JSON.stringify(message));\r\n  // }\r\n}\r\n\r\n// export function subscribePublic(onMessageReceived) {\r\n//   if (stompClient) {\r\n//     stompClient.subscribe(\"/topic/public\", function (message) {\r\n//       onMessageReceived(JSON.parse(message.body));\r\n//     });\r\n//   }\r\n// }\r\n"],"mappings":"AAAA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEE;AACA;AACA;AACF;;AAIA,OAAO,SAASA,WAAWA,CAACC,OAAO,EAAE;EACnCC,SAAS,CAACC,IAAI,CAACF,OAAO,CAAC;EACvB;EACA;EACA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}