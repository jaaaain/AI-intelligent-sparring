{"ast":null,"code":"import SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport { Client } from '@stomp/stompjs';\nlet stompClient = null;\nexport function connect(onMessageReceived, onConnected) {\n  const socket = new SockJS(\"/ws\");\n  stompClient = Stomp.over(socket);\n  stompClient.connect({}, onConnected, onError);\n  function onError(error) {\n    console.log(\"WebSocket connection error: \" + error);\n  }\n}\nexport function sendMessage(message) {\n  if (stompClient) {\n    stompClient.send(\"/app/chat.sendMessage\", {}, JSON.stringify(message));\n  }\n}\nexport function addUser(username) {\n  if (stompClient) {\n    stompClient.send(\"/app/chat.addUser\", {}, JSON.stringify({\n      sender: username,\n      type: 'JOIN'\n    }));\n  }\n}\nexport function subscribePublic(onMessageReceived) {\n  if (stompClient) {\n    stompClient.subscribe(\"/topic/public\", function (message) {\n      onMessageReceived(JSON.parse(message.body));\n    });\n  }\n}","map":{"version":3,"names":["SockJS","Stomp","Client","stompClient","connect","onMessageReceived","onConnected","socket","over","onError","error","console","log","sendMessage","message","send","JSON","stringify","addUser","username","sender","type","subscribePublic","subscribe","parse","body"],"sources":["D:/000Projects/JAVA/emp-train/et-web/src/services/WebSocketService.js"],"sourcesContent":["import SockJS from \"sockjs-client\";\r\nimport Stomp from \"stompjs\";\r\nimport { Client } from '@stomp/stompjs';\r\n\r\n\r\nlet stompClient = null;\r\n\r\nexport function connect(onMessageReceived, onConnected) {\r\n  const socket = new SockJS(\"/ws\");\r\n  stompClient = Stomp.over(socket);\r\n  stompClient.connect({}, onConnected, onError);\r\n\r\n  function onError(error) {\r\n    console.log(\"WebSocket connection error: \" + error);\r\n  }\r\n}\r\n\r\nexport function sendMessage(message) {\r\n  if (stompClient) {\r\n    stompClient.send(\"/app/chat.sendMessage\", {}, JSON.stringify(message));\r\n  }\r\n}\r\n\r\nexport function addUser(username) {\r\n  if (stompClient) {\r\n    stompClient.send(\"/app/chat.addUser\", {}, JSON.stringify({ sender: username, type: 'JOIN' }));\r\n  }\r\n}\r\n\r\nexport function subscribePublic(onMessageReceived) {\r\n  if (stompClient) {\r\n    stompClient.subscribe(\"/topic/public\", function (message) {\r\n      onMessageReceived(JSON.parse(message.body));\r\n    });\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,eAAe;AAClC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,MAAM,QAAQ,gBAAgB;AAGvC,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,SAASC,OAAOA,CAACC,iBAAiB,EAAEC,WAAW,EAAE;EACtD,MAAMC,MAAM,GAAG,IAAIP,MAAM,CAAC,KAAK,CAAC;EAChCG,WAAW,GAAGF,KAAK,CAACO,IAAI,CAACD,MAAM,CAAC;EAChCJ,WAAW,CAACC,OAAO,CAAC,CAAC,CAAC,EAAEE,WAAW,EAAEG,OAAO,CAAC;EAE7C,SAASA,OAAOA,CAACC,KAAK,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,GAAGF,KAAK,CAAC;EACrD;AACF;AAEA,OAAO,SAASG,WAAWA,CAACC,OAAO,EAAE;EACnC,IAAIX,WAAW,EAAE;IACfA,WAAW,CAACY,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC,EAAEC,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC,CAAC;EACxE;AACF;AAEA,OAAO,SAASI,OAAOA,CAACC,QAAQ,EAAE;EAChC,IAAIhB,WAAW,EAAE;IACfA,WAAW,CAACY,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEG,MAAM,EAAED,QAAQ;MAAEE,IAAI,EAAE;IAAO,CAAC,CAAC,CAAC;EAC/F;AACF;AAEA,OAAO,SAASC,eAAeA,CAACjB,iBAAiB,EAAE;EACjD,IAAIF,WAAW,EAAE;IACfA,WAAW,CAACoB,SAAS,CAAC,eAAe,EAAE,UAAUT,OAAO,EAAE;MACxDT,iBAAiB,CAACW,IAAI,CAACQ,KAAK,CAACV,OAAO,CAACW,IAAI,CAAC,CAAC;IAC7C,CAAC,CAAC;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}